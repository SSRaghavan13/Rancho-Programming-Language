OPEN_PAREN ::= '(' 
CLOSE_PAREN ::= ')' 
OPEN_CURLY ::= '{' 
CLOSE_CURLY ::= '}' 
DOUBLE_QUOTES ::= " 

DIGIT ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

NUMBER ::= DIGIT NUMBER | DIGIT 

LETTER ::= 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G'
       | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N'
       | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U'
       | 'V' | 'W' | 'X' | 'Y' | 'Z' | 'a' | 'b'
       | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i'
       | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p'
       | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w'
       | 'x' | 'y' | 'z'

STRING ::= LETTER STRING | LETTER 

IDENTIFER ::= STRING

DATA_TYPE ::= NUM_DATA_TYPE 
              | STRING_DATA_TYPE 
              | STACK_DATA_TYPE 
              | QUEUE_DATA_TYPE 

NUM_DATA_TYPE ::= 'num'

STRING_DATA_TYPE ::= 'string' 

BOOLEAN_DATA_TYPE ::= 'boolean'

STACK_DATA_TYPE ::= 'stack'

QUEUE_DATA_TYPE ::= 'queue'

LIST_DATA_TYPE ::= 'list'

ASSIGNMENT_OPERATOR ::= '=' 

BOOLEAN_OPERATOR ::= 'and' | 'or' 

BOOLEAN_VALUE ::= 'true' | 'false' 

COMPARISION_OPERATOR ::= '>' | '<' | '==' | '<=' | '>=' | '!=' 


BOOLEAN_EXPRESSION ::= EXPRESSION COMPARISION_OPERATOR EXPRESSION 
			| BOOLEAN_EXPRESSION BOOLEAN_OPERATOR BOOLEAN_EXPRESSION
			| 'not' BOOLEAN_EXPRESSION
			| BOOLEAN_VALUE 
                     | OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN

EXPRESSION_OPERATOR ::= '+' | '-' | '*' | '/'

EXPRESSION ::= EXPRESSION EXPRESSION_OPERATOR EXPRESSION 
              | IDENTIFER ASSIGNMENT_OPERATOR EXPRESSION
              | OPEN_PAREN EXPRESSION CLOSE_PAREN 
              | NUMBER 
              | IDENTIFER
              | STACK_PRINT
              | QUEUE_PRINT

NUM_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR EXPRESSION 
                     | IDENTIFER ASSIGNMENT_OPERATOR TERNARY_STATEMENT

STRING_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR STRING
                            | IDENTIFER ASSIGNMENT_OPERATOR STRING '+' STRING

BOOLEAN_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR BOOLEAN_EXPRESSION

STACK_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR LIST

QUEUE_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR LIST

LIST_ASSIGNMENT_STATEMENT ::= IDENTIFER ASSIGNMENT_OPERATOR LIST

VARIABLE_DECLARATION ::= DATA_TYPE IDENTIFER 
                     | NUM_DATA_TYPE NUM_ASSIGNMENT_STATEMENT
                     | STRING_DATA_TYPE STRING_ASSIGNMENT_STATEMENT 
                     | BOOLEAN_DATA_TYPE BOOLEAN_ASSIGNMENT_STATEMENT
                     | STACK_DATA_TYPE STACK_ASSIGNMENT_STATEMENT
                     | QUEUE_DATA_TYPE QUEUE_ASSIGNMENT_STATEMENT
                     | LIST_DATA_TYPE LIST_ASSIGNMENT_STATEMENT

VARIABLE_ASSIGNMENT ::= NUM_ASSIGNMENT_STATEMENT 
                     | STRING_ASSIGNMENT_STATEMENT 
                     | BOOLEAN_ASSIGNMENT_STATEMENT
                     | STACK_ASSIGNMENT_STATEMENT
                     | QUEUE_ASSIGNMENT_STATEMENT
                     | LIST_ASSIGNMENT_STATEMENT

PRINT ::= 'print' OPEN_PAREN PRINT_STATEMENT CLOSE_PAREN 

PRINT_STATEMENT_LIST ::= Null 
              | PRINT_STATEMENT

PRINT_STATEMENT ::= IDENTIFER PRINT_STATEMENT_LIST
              | STRING PRINT_STATEMENT_LIST
              | EXPRESSION PRINT_STATEMENT_LIST
              | STACK_PRINT
              | QUEUE_PRINT

IF_ELSE_DECLARATION ::= IF_STATEMENT ELIF_STATEMENT ELSE_STATEMENT 

IF_STATEMENT ::= 'if' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY 

ELIF_STATEMENT ::=  'elif' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY, ELIF_STATEMENT | Null 

ELSE_STATEMENT ::= 'else' OPEN_CURLY COMMAND CLOSE_CURLY | Null 

TERNARY_STATEMENT ::= BOOLEAN_EXPRESSION '?' EXPRESSION ::= EXPRESSION 

WHILE_LOOP ::= 'while' OPEN_PAREN BOOLEAN_EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY 

FOR_LOOP ::= 'for' IDENTIFER 'in' 'range' OPEN_PAREN NUMBER ',' NUMBER CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY 

FOR_LOOP ::= 'for' OPEN_PAREN IDENTIFER ASSIGNMENT_OPERATOR EXPRESSION ';' IDENTIFER COMPARISION_OPERATOR EXPRESSION ';' IDENTIFER = EXPRESSION CLOSE_PAREN OPEN_CURLY COMMAND CLOSE_CURLY

STACK_OPERATIONS ::= STACK_PRINT
              | IDENTIFER '.' 'push' OPEN_PAREN EXPRESSION CLOSE_PAREN
              
STACK_PRINT ::= IDENTIFER '.' 'pop' OPEN_PAREN CLOSE_PAREN
              | IDENTIFER '.' 'top' OPEN_PAREN CLOSE_PAREN

QUEUE_OPERATIONS ::= QUEUE_PRINT
              | IDENTIFER '.' 'push' OPEN_PAREN EXPRESSION CLOSE_PAREN
              
QUEUE_PRINT ::= IDENTIFER '.' 'poll' OPEN_PAREN CLOSE_PAREN
              | IDENTIFER '.' 'head' OPEN_PAREN CLOSE_PAREN

LIST_OPERATIONS ::= IDENTIFER '.' 'add' OPEN_PAREN EXPRESSION CLOSE_PAREN
              | IDENTIFER '.' 'add' OPEN_PAREN EXPRESSION [,] EXPRESSION CLOSE_PAREN
              | IDENTIFER '.' 'remove' OPEN_PAREN EXPRESSION CLOSE_PAREN
              | IDENTIFER '.' 'get' OPEN_PAREN EXPRESSION CLOSE_PAREN

METHOD ::= METHOD_DECLARATION | METHOD_CALL

METHOD_DECLARATION ::= 'def' IDENTIFER OPEN_PAREN PARAMETER_LIST CLOSE_PAREN OPEN_CURLY METHOD_BODY CLOSE_CURLY

METHOD_CALL ::= IDENTIFER OPEN_PAREN PARAMETER_LIST CLOSE_PAREN

PARAMETER_LIST ::- IDENTIFER ',' PARAMETER_LIST | Null

METHOD_BODY ::- COMMAND

STATEMENT ::= VARIABLE_DECLARATION 
              | VARIABLE_ASSIGNMENT 
              | IF_ELSE_DECLARATION 
              | WHILE_LOOP  
              | FOR_LOOP 
              | PRINT
              | STACK_OPERATIONS
              | QUEUE_OPERATIONS
              | LIST_OPERATIONS
              | METHOD

COMMAND ::= STATEMENT COMMAND | Null 

PROGRAM ::= BLOCK 

BLOCK ::= COMMAND